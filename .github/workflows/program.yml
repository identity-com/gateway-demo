name: Gateway Sample Program
on:
  push:
#    paths:
#      - 'program/programs/gateway_demo/**'
    tags:
      - v*
jobs:
  build-deploy:
    name: Deploy the program, built on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }}, and ${{ matrix.os }}
    env:
      SOLANA_PROGRAM_ID: Cq18woAS5xVXb6Ci24pxk6f1ptLx4h3HHcxm12LZPt1e
      SOLANA_AUTHORITY: ${{ secrets.SOLANA_DEV_AUTHORITY }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.58.1']
        solana: ['v1.8.14']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./program/target
          key: cargo-build-${{ hashFiles('Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build programs
        uses: actions-rs/cargo@v1
        with:
          command: build-bpf
          args: --manifest-path program/Cargo.toml

      - name: Deploy dev program
        working-directory: ./program
        run: |
          echo "$SOLANA_AUTHORITY" > ~/.config/solana/id.json
          solana config set --url devnet
          solana program deploy target/deploy/gateway_demo.so --program-id $SOLANA_PROGRAM_ID
          solana program show $SOLANA_PROGRAM_ID
